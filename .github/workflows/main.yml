name: Deploy Function App and Cosmos DB (Backend) to Azure

on:
  push:
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './python/'
  APP_NAME_SUFFIX: 'webproj14215'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy Bicep file
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: build/main.bicep
        parameters: 'appNameSuffix=${{ env.APP_NAME_SUFFIX }}'
        deploymentName: 'deployment-${{ github.run_number }}'
        failOnStdErr: false

    - name: Get the most recent deployment name
      id: get_deployment_name
      run: |
        deployment_name=$(az deployment group list --resource-group ${{ secrets.AZURE_RG }} --query "[0].name" -o tsv)
        echo "::set-output name=deployment_name::$deployment_name"
      shell: bash

    - name: Get function name from deployment outputs
      id: get_function_name
      run: | 
        function_name=$(az deployment group show --name ${{ steps.get_deployment_name.outputs.deployment_name }} --resource-group ${{ secrets.AZURE_RG }} --query "properties.outputs.functionAppName.value" -o tsv)
        echo "::set-output name=function_name::$function_name"
      shell: bash

    - name: Setup Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Resolve Python Dependencies using Pip
      run: |
        pushd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: Run Azure Functions Action
      uses: azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ steps.get_function_name.outputs.function_name }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true
